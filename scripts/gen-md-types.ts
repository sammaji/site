import { markdown } from "@/lib/markdown";
import fs from "fs";
import path from "path";

export async function genMdTypes() {
	const contentdir = path.join(process.cwd(), "md");
	const filesAndFolders = await fs.promises.readdir(contentdir, {
		withFileTypes: true,
	});

	const folders = filesAndFolders
		.filter(d => d.isDirectory())
		.map(d => d.name);

	const map: Record<string, any[]> = {};

	for (const folder of folders) {
		const folderpath = path.join(contentdir, folder);
		const files = await fs.promises.readdir(folderpath);

		const meta: any[] = [];

		for (const file of files) {
			const mark = await markdown(folder, file);
			if (typeof mark === "number") return;
			mark.frontmatter.slug = file.replace(".md", "");
			meta.push(mark.frontmatter);
		}
		map[folder] = meta;
	}

	const json = JSON.stringify(map, null, 2);
	const content = `
// DO NOT EDIT
// This file is auto generated by scripts/gen-md-types.ts

export const content: Record<string, any[]> = ${json};
`;

	fs.writeFileSync(path.join(process.cwd(), "md", "content.ts"), content);
}

genMdTypes();
